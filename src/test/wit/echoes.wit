interface foo {
  echo-nothing: func()
  echo-bool: func(v: bool) -> bool
  echo-u8: func(v: u8) -> u8
  echo-s8: func(v: s8) -> s8
  echo-u16: func(v: u16) -> u16
  echo-s16: func(v: s16) -> s16
  echo-u32: func(v: u32) -> u32
  echo-s32: func(v: s32) -> s32
  echo-char: func(v: char) -> char
  echo-u64: func(v: u64) -> u64
  echo-s64: func(v: s64) -> s64
  echo-float32: func(v: float32) -> float32
  echo-float64: func(v: float64) -> float64
  echo-string: func(v: string) -> string
  echo-list-bool: func(v: list<bool>) -> list<bool>
  echo-list-u8: func(v: list<u8>) -> list<u8>
  echo-list-s8: func(v: list<s8>) -> list<s8>
  echo-list-u16: func(v: list<u16>) -> list<u16>
  echo-list-s16: func(v: list<s16>) -> list<s16>
  echo-list-u32: func(v: list<u32>) -> list<u32>
  echo-list-s32: func(v: list<s32>) -> list<s32>
  echo-list-char: func(v: list<char>) -> list<char>
  echo-list-u64: func(v: list<u64>) -> list<u64>
  echo-list-s64: func(v: list<s64>) -> list<s64>
  echo-list-float32: func(v: list<float32>) -> list<float32>
  echo-list-float64: func(v: list<float64>) -> list<float64>
  echo-list-string: func(v: list<string>) -> list<string>
  echo-list-list-u8: func(v: list<list<u8>>) -> list<list<u8>>
  echo-list-list-list-u8: func(v: list<list<list<u8>>>) -> list<list<list<u8>>>
  echo-option-u8: func(v: option<u8>) -> option<u8>
  echo-option-option-u8: func(v: option<option<u8>>) -> option<option<u8>>
  echo-many: func(v1: bool, v2: u8, v3: u16, v4: u32, v5: u64, v6: s8, v7: s16, v8: s32, v9: s64, v10: float32, v11: float64, v12: char, v13: string, v14: list<bool>, v15: list<u8>, v16: list<u16>) -> tuple<bool, u8, u16, u32, u64, s8, s16, s32, s64, float32, float64, char, string, list<bool>, list<u8>, list<u16>>
}

default world echoes {
  import imports: self.foo
  export exports: self.foo
}
