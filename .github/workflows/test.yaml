name: Test
on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "examples/**"
      - "README.md"
      - "CONTRIBUTING.md"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  WASI_SDK_VERSION: 20.16g86c5c116b0a6
  WASI_SDK_RELEASE: shared-library-alpha-2

jobs:
  test:
    name: Test
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install latest Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          components: clippy, rustfmt

      - name: Install latest Rust nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: false

      - name: Install Rust std source
        shell: bash
        run: rustup component add rust-src --toolchain nightly

      - name: Install Wasm Rust targets
        shell: bash
        run: rustup target add wasm32-wasi wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ hashFiles('./Cargo.lock') }}"
          cache-on-failure: "false"

      - name: Install WASI-SDK
        shell: bash
        run: |
          cd /tmp
          curl -LO https://github.com/dicej/wasi-sdk/releases/download/${WASI_SDK_RELEASE}/wasi-sdk-${WASI_SDK_VERSION}-linux.tar.gz
          tar xf wasi-sdk-${WASI_SDK_VERSION}-linux.tar.gz
          mv wasi-sdk-${WASI_SDK_VERSION} /opt/wasi-sdk

      - name: Cache CPython
        id: cache-cpython-wasi
        uses: actions/cache@v3
        with:
          path: cpython/builddir/wasi
          key: cpython-wasi
          enableCrossOsArchive: true

      - name: Lint
        shell: bash
        run: bash .github/workflows/lint.sh

      - name: Test
        shell: bash
        run: COMPONENTIZE_PY_TEST_COUNT=20 PROPTEST_MAX_SHRINK_ITERS=0 cargo test --release
